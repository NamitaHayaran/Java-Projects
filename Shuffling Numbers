import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class Shuffle extends JFrame implements ActionListener
{
 boolean won= false,lost=false;
 int count = 0,hitcount=100;
 JButton button[];
 JPanel  panel;
 JTextField message;
 Font dfont ,wlfont;
 String     caption[][] = {{"","6","2","5","7","1","4","8","3"},
                          {"7","1","3","6","8","5","4","2",""},
                          {"","6","2","5","7","1","4","8","3"},
                          {"7","6","","3","8","1","5","2","4"},
                          {"5","3","2","7","","1","4","8","6"},
                          {"6","2","3","","5","1","7","4","8"}
                          };
 int swapcaptionposition[][] = {{1,3},
                                {0,2,4},
                                {1,5}, 
                                {0,4,6},
                                {1,3,5,7},
                                {2,4,8},
                                {3,7},
                                {4,8,6},
                                {5,7}
                                };

 public Shuffle()
 { 
   panel = new JPanel();
   panel.setLayout(new GridLayout(3,3,10,10));
   button = new JButton[9];
   dfont = new Font("Matura MT Script Capitals",Font.BOLD,55);
   wlfont = new Font("Matura MT Script Capitals",Font.BOLD,30);
   for(int i=0;i<button.length;i++)
     {
      panel.add(button[i] = new JButton());
      button[i].setActionCommand(i+"");
      button[i].setForeground(Color.BLUE);
      button[i].setFont(dfont);
      button[i].addActionListener(this);
     }
     message = new JTextField("SHUFFLING NUMBERS  " + "Remaining hits:  " + hitcount);
     message.setFont(new Font("Rosewood Std",Font.PLAIN,20));
     message.setEditable(false);
    Container cont = getContentPane();
    cont.add(panel,BorderLayout.CENTER);
    cont.add(message,BorderLayout.NORTH);
    addMenuBar();
    setCaption();
   addWindowListener(new ExitListener());
   WindowUtility.show(this,450,450);
 }
 public void setCaption()
 {   
   for(int i=0 ; i<button.length;i++)
   {
    button[i].setText(caption[count][i]);    
    button[i].setFont(dfont); 
    }
    count = (count+1)%caption.length;
 }
 public int hitCount()
 {
   return --hitcount;
 }
 public void addMenuBar()
 {
    JMenuBar  menubar  = new JMenuBar();
    JMenu     menu     = new JMenu("FILE");
    JMenuItem menuitem = new JMenuItem("NEW");
     
    menu.setMnemonic(KeyEvent.VK_F);
    menuitem.setMnemonic(KeyEvent.VK_N);
    menuitem.addActionListener(this);
    menu.add(menuitem);
    menu.addSeparator();
    menuitem = new JMenuItem("EXIT");
    menuitem.setMnemonic(KeyEvent.VK_X);
    menuitem.addActionListener(this);
    menu.add(menuitem);
    menubar.add(menu);   
    setJMenuBar(menubar);    
 }
 public boolean swapCaption(int pos)
 {int cnt = 1;
  for(int i=0;i<swapcaptionposition[pos].length;i++)
   {  
    if((button[swapcaptionposition[pos][i]].getText()).equals("")) 
     { 
        button[swapcaptionposition[pos][i]].setText(button[pos].getText());
        button[pos].setText("");
        message.setText("A SUFFLE GAME       " + "Remaining hits:  " +(cnt= hitCount())); 
        break;
     }

   }
    if(cnt<=0)
      {
         lost = true;lostgame();
      }
   return isWin();
 }
 public boolean isWin()
 {   boolean win = true;
    for(int i=1;i<button.length;i++)
     {
       if(!button[i-1].getText().equals(i+""))
          { 
            win = false;break;
          }
     }
      return win; 
 }
 public void wongame()
 {   Graphics g;
    message.setText("you won the Game   in    " + "hit count: " + (100-hitcount) );
     for(int i=0;i<button.length;i++)
      {
       button[i].setFont(wlfont);
       button[i].setText("Won");
      }
 } 
 public void lostgame()
 {
    message.setText("you lost the Game   Remain hit=0 ");
    for(int i=0;i<button.length;i++)
      {
       button[i].setFont(wlfont);
       button[i].setText("Lost");
      }
 }
 public void actionPerformed(ActionEvent ae)
 {
    String actioncommand = ae.getActionCommand();
   
    if(actioncommand.equals("NEW"))
      {setCaption(); won = false;lost = false;hitcount = 100;
       message.setText("A SUFFLE GAME       " + "Remaining hits:  " + hitcount);}
    else if(actioncommand.equals("EXIT"))
      System.exit(0);
    else
    { 
       if(!lost && !won)
         {
            if(swapCaption(Integer.parseInt(actioncommand)))
              { wongame();  won = true;}
        
         }
        else
         message.setText("click file new for new Game");
   }
   
 }
 public static void main(String args[])
 {
   new Shuffle();
 }
}
